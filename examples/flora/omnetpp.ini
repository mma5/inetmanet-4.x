[General]
network = LoRaNetworkTest
**.maxTransmissionDuration = 4s

#cmdenv-autoflush = true
#cmdenv-status-frequency = 10000000s
#cmdenv-express-mode = false
#cmdenv-output-file = cmd_env_log.txt
seed-set=${repetition}
**.vector-recording = false

rng-class = "cMersenneTwister"
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"
**.loRaGW[*].packetForwarder.indexNumber = 0

**.evaluateADRinNode = true
**.evaluateADRinServer = true
**.networkServer.numApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.app[0].typename = "NetworkServerApp"
**.networkServer.app[0].destAddresses = "loRaGW[0]"
#**.networkServer.app[0].destAddresses = "loRaGW[0..1]"#udpApp
**.networkServer.app[0].destPort = 2000
**.networkServer.app[0].localPort = 1000
**.networkServer.app[0].adrMethod = ${"avg"}

**.numberOfPacketsToSend = 0 #${numberOfPAckets = 200..5000 step 200} #100 #obviously 0 means infinite number of packets
sim-time-limit = 1d
#####warmup-period = 1d
simtime-resolution = -11
repeat = 10
#warmup-period = 1d
**.timeToFirstPacket = exponential(1800s)#exponential(1000s)
**.timeToNextPacket = normal(600s, 20s)#exponential(1000s)
**.alohaChannelModel = false

#nodes features
**.numberOfNodes = 100#${Size=100, 200, 300, 400, 500, 600, 700, 800, 900, 1000}

**.initFromDisplayString = false

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 5000m #1000m
**.constraintAreaMaxY = 5000m #1000m
**.constraintAreaMaxZ = 0m


**.loRaNodes[*].**.initialX = uniform(0m, 5000m)
**.loRaNodes[*].**.initialY = uniform(0m, 5000m)
**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaTP = 14dBm
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**.evaluateADRinNode = true
**.headerLength=${PackLength=30B}

#gateway features
**.numberOfGateways = 1
**.loRaGW[0].**.initialX = 2500m
**.loRaGW[0].**.initialY = 2500m
**.loRaGW[1].**.initialX = 4500m
**.loRaGW[1].**.initialY = 4500m
**.LoRaGWNic.radio.iAmGateway = true

*.loRaGW[*].LoRaGWNic.mac.classUsed = "B" # "B"    "A" or "B" 
#*.loRaGW[*].LoRaGWNic.mac.classUsed = "B" #"S" # "B"    "A" or "B" 
*.loRaGW[*].LoRaGWNic.mac.beaconTimer = 128 # the period of beaconMessage sent from GW
*.loRaGW[*].LoRaGWNic.mac.beaconPeriodTime = 128 # the period of beaconMessage sent from GW

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumer.typename = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "^.IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# LoRa MAC class
*.loRaNodes[*].LoRaNic.mac.classUsed = "B"
**.mac.beaconStart = 2
*.loRaGW[*].LoRaGWNic.mac.beaconPeriodTime = 128 # the period of beaconMessage sent from GW
**.beaconPeriodTime = 128
*.loRaGW[*].LoRaGWNic.mac.pingNumber = 4    # power of 2

*.loRaGW[*].LoRaGWNic.mac.beaconCR = 4
*.loRaGW[*].LoRaGWNic.mac.beaconSF = 12
*.loRaGW[*].LoRaGWNic.mac.beaconBW = 125000

#general features
**.sigma = 3.57#${sigma=0, 3.9, 7.8}0#


LoRaNetworkTest.**.radio.separateTransmissionParts = false
LoRaNetworkTest.**.radio.separateReceptionParts = false

**.ipv4Delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLoss.typename = "LoRaLogNormalShadowing"#"LoRaPathLossOulu"# "LoRaLogNormalShadowing"
#**.LoRaMedium.pathLoss.typename = "LoRaHataOkumura"
#${PathLoss="LoRaPathLossOulu", "LoRaLogNormalShadowing"}
**.minInterferenceTime = 0s
**.displayAddresses = false

# cache features
# **.LoRaMedium.mediumLimitCacheType = "LoRaMediumCache"
# **.LoRaMedium.rangeFilter = "communicationRange"
# **.LoRaMedium.neighborCacheType = "LoRaNeighborCache"
# **.LoRaMedium.neighborCache.range = 546m
# **.LoRaMedium.neighborCache.refillPeriod = 3000s

# mobility settings
**.loRaNodes[*].mobilityType = "RandomWaypointMobility"
**.loRaNodes[*].mobility.initFromDisplayString = false
**.loRaNodes[*].mobility.speed = ${Speed=5mps}#${Speed=5mps,10mps,15mps,20mps,25mps}# uniform(20mps,50mps)
**.loRaNodes[*].mobility.waitTime = uniform(20s,40s)

